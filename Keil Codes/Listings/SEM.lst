C51 COMPILER V9.60.0.0   SEM                                                               12/23/2021 01:47:58 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE SEM
OBJECT MODULE PLACED IN .\Objects\SEM.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE SEM.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\SEM.l
                    -st) TABS(2) OBJECT(.\Objects\SEM.obj)

line level    source

   1          #include <reg51.h>
   2          sbit rs=P3^5;
   3          sbit rw=P3^6;
   4          sbit en=P3^7;
   5          sbit sw=P1^6;
   6          sbit r1=P1^1;
   7          sbit sen=P1^7;
   8          void gsm(void);
   9          void sense(void);
  10          unsigned int bill=0,count=0,u=0,count1,u1,bill1,unit;
  11          float watt_factor=0.3125;
  12          void delay(unsigned int x)
  13          {
  14   1      unsigned int i;
  15   1      for(;x>0;x--)
  16   1      for(i=0;i<225;i++);
  17   1      }
  18          unsigned char rx()
  19          {
  20   1      while(RI==0)
  21   1      {
  22   2      if(sen==0)
  23   2      {
  24   3      sense();
  25   3      }
  26   2      if(sw==0)
  27   2      {
  28   3      gsm();
  29   3      }
  30   2      }
  31   1      RI=0;
  32   1      return SBUF;
  33   1      }
  34          void tx(unsigned char ch)
  35          {
  36   1      SBUF=ch;
  37   1      while(TI==0);
  38   1      TI=0;
  39   1      }
  40          void uart_str(unsigned char *s)
  41          {
  42   1      while(*s)
  43   1      tx(*s++);
  44   1      }
  45          void convert(unsigned int val)
  46          {
  47   1      unsigned char a1,a2,a3,a4;
  48   1      a1=(val%10000)/1000+48;
  49   1      a2=(val%1000)/100+48;
  50   1      a3=(val%100)/10+48;
  51   1      a4=(val%10)+48;
  52   1      tx(a1);
  53   1      tx(a2);
  54   1      tx(a3);
C51 COMPILER V9.60.0.0   SEM                                                               12/23/2021 01:47:58 PAGE 2   

  55   1      tx(a4);
  56   1      }
  57          void cmd(unsigned char x)
  58          {
  59   1      P2=x;
  60   1      rs=0;
  61   1      rw=0;
  62   1      en=1;
  63   1      delay(10);
  64   1      en=0;
  65   1      delay(10);
  66   1      }
  67          void lcdinit()
  68          {
  69   1       cmd(0x38); 
  70   1       cmd(0x0e); 
  71   1       cmd(0x01); 
  72   1       cmd(0x06); 
  73   1      }
  74          void disp(unsigned char x)
  75          {
  76   1      P2=x;
  77   1      rs=1;
  78   1      rw=0;
  79   1      en=1;
  80   1      delay(10);
  81   1      en=0;
  82   1      delay(10);
  83   1      }
  84          void disp_str(unsigned char *x)
  85          {
  86   1      while(*x)
  87   1      {
  88   2      disp(*x++);
  89   2      }
  90   1      }
  91          void lcd_val(unsigned int val)
  92          {
  93   1      unsigned char a1,a2,a3,a4;
  94   1      a1=(val%10000)/1000+48;
  95   1      a2=(val%1000)/100+48;
  96   1      a3=(val%100)/10+48;
  97   1      a4=(val%10)+48;
  98   1      disp(a1);
  99   1      disp(a2);
 100   1      disp(a3);
 101   1      disp(a4);
 102   1      }
 103          void main()
 104          {
 105   1      unsigned char i=0,ch=0,n=0,j=0,dum[10],c=0;
 106   1      unsigned char num[15];
 107   1      lcdinit();
 108   1      SCON=0x50;
 109   1      TMOD=0x20;
 110   1      TH1=-3;
 111   1      TR1=1;
 112   1       cmd(0x01);
 113   1      delay(500);
 114   1      r1=0;
 115   1      cmd(0x80);
 116   1      disp_str("GSM BASED ENERGY ");
C51 COMPILER V9.60.0.0   SEM                                                               12/23/2021 01:47:58 PAGE 3   

 117   1      cmd(0xc0);
 118   1      disp_str("METER READING ....");
 119   1      delay(2000);
 120   1      cmd(0x01);
 121   1       cmd(0x80);
 122   1      disp_str("AT");
 123   1      uart_str("AT");
 124   1      tx(0x0A);
 125   1      tx(0x0D);
 126   1      delay(1000);
 127   1      cmd(0x01);
 128   1       cmd(0x80);
 129   1      disp_str("AT+CMGF=1");
 130   1      uart_str("AT+CMGF=1");
 131   1      tx(0x0A);
 132   1      tx(0x0D);
 133   1      delay(1000);
 134   1      uart_str("AT+CMGD=");
 135   1      tx('1');
 136   1      tx(0x0A);
 137   1      tx(0x0D);
 138   1      delay(2000);
 139   1      uart_str("AT+CMGD=");
 140   1      tx('2');
 141   1      tx(0x0A);
 142   1      tx(0x0D);
 143   1      delay(2000);
 144   1      uart_str("AT+CMGD=");
 145   1      tx('3');
 146   1      tx(0x0A);
 147   1      tx(0x0D);
 148   1      delay(2000);
 149   1       cmd(0x01);
 150   1       cmd(0x80);
 151   1       disp_str("PULSE COUNT:");
 152   1       cmd(0x8C);
 153   1       lcd_val(count);
 154   1       cmd(0xC0);
 155   1       disp_str("NO.UNITS:");
 156   1       cmd(0xC9);
 157   1       lcd_val(u);
 158   1      RI=0;
 159   1      r1=1;
 160   1      while(1)
 161   1      { 
 162   2       while(rx() != ',');
 163   2       n=rx();
 164   2      cmd(0x01);
 165   2       uart_str("AT+CMGR=");
 166   2      tx(n);
 167   2      tx(0x0A);
 168   2      tx(0x0D);
 169   2      while(rx() != ',');
 170   2      for(i=0;i<14;i++)
 171   2      num[i]=rx();
 172   2      do {
 173   3      c=rx();
 174   3       }while(rx() != 0x0D);
 175   2      j=0;
 176   2      l: dum[j]=rx();
 177   2      if(dum[j] !=0x0D)
 178   2      {
C51 COMPILER V9.60.0.0   SEM                                                               12/23/2021 01:47:58 PAGE 4   

 179   3      j++;
 180   3      goto l;
 181   3      }
 182   2      cmd(0x01);
 183   2      cmd(0x80);
 184   2      for(j=0;dum[j] != 0x0D ;j++)
 185   2      disp(dum[j]);
 186   2      delay(2000);
 187   2       uart_str("AT+CMGD=");
 188   2      tx(n);
 189   2      tx(0x0A);
 190   2      tx(0x0D);
 191   2      delay(2000);
 192   2      if(dum[2]=='1')
 193   2      {
 194   3      cmd(0x01);
 195   3      cmd(0x80);
 196   3       disp_str("PLEASE PAY BILL");
 197   3       cmd(0xC0);
 198   3       disp_str("BILL:");
 199   3      cmd(0xC5);
 200   3       lcd_val(bill);
 201   3      r1=0;
 202   3      delay(2000);
 203   3      }
 204   2      else if(dum[2]=='2')
 205   2      {
 206   3      cmd(0x01);
 207   3      cmd(0x80);
 208   3       disp_str("BILL PAID .........");
 209   3      cmd(0xc0);
 210   3       disp_str("POWER ON ..........");
 211   3      r1=1;
 212   3      delay(2000);
 213   3      cmd(0x01);
 214   3       count=count-count1;
 215   3      u=u-u1;
 216   3      cmd(0x01);
 217   3      RI=0;
 218   3      cmd(0x01);
 219   3      cmd(0x80);
 220   3       disp_str("PULSE COUNT:");
 221   3      cmd(0x8C);
 222   3       lcd_val(count);
 223   3      cmd(0xC0);
 224   3       disp_str("NO.UNITS:");
 225   3      cmd(0xC9);
 226   3       lcd_val(u);
 227   3      count1=0;
 228   3      u1=0;
 229   3      }
 230   2      else
 231   2      {
 232   3      cmd(0x01);
 233   3       cmd(0x80);
 234   3       disp_str("WRONG MESSAGE..");
 235   3      delay(1000);
 236   3      cmd(0x01);
 237   3      }
 238   2      ch=0;
 239   2      }
 240   1      }
C51 COMPILER V9.60.0.0   SEM                                                               12/23/2021 01:47:58 PAGE 5   

 241          void gsm()
 242          {
 243   1      RI=0;
 244   1      uart_str("AT");
 245   1      tx(0x0A);
 246   1      tx(0x0D);
 247   1      delay(2000);
 248   1      uart_str("AT+CMGF=1");
 249   1      tx(0x0A);
 250   1      tx(0x0D);
 251   1      delay(2000);
 252   1      cmd(0x01);
 253   1      cmd(0x80);
 254   1      disp_str("MESSAGE SENDING....");
 255   1      uart_str("AT+CMGS=");
 256   1      tx('"');
 257   1      uart_str("7993776927");
 258   1      tx('"');
 259   1      tx(0x0A);
 260   1      tx(0x0D);
 261   1      delay(2000);
 262   1      uart_str("MONTH COMPLETED PLEASE PAY THE BILL AMOUNT AND UNITS IS:");
 263   1      tx(0x0A);
 264   1      tx(0x0D);
 265   1      uart_str("UNITS:");
 266   1       convert(u);
 267   1      tx(0x0A);
 268   1      tx(0x0D);
 269   1      uart_str("RS:");
 270   1      bill=u*5;
 271   1      convert(bill);
 272   1      delay(2000);
 273   1      cmd(0x01);
 274   1      tx(0x1A);
 275   1      delay(3000);
 276   1      uart_str("AT");
 277   1      tx(0x0A);
 278   1      tx(0x0D);
 279   1      delay(2000);
 280   1      uart_str("AT+CMGF=1");
 281   1      tx(0x0A);
 282   1      tx(0x0D);
 283   1      delay(2000);
 284   1      cmd(0x01);
 285   1      cmd(0x80);
 286   1      disp_str("MESSAGE SENDING....");
 287   1      uart_str("AT+CMGS=");
 288   1      tx('"');
 289   1      uart_str("7013684692");
 290   1      tx('"');
 291   1      tx(0x0A);
 292   1      tx(0x0D);
 293   1      delay(2000);
 294   1      uart_str("MONTH COMPLETED PLEASE PAY THE BILL AMOUNT AND UNITS IS:");
 295   1      tx(0x0A);
 296   1      tx(0x0D);
 297   1      uart_str("UNITS:");
 298   1       convert(u);
 299   1      tx(0x0A);
 300   1      tx(0x0D);
 301   1      uart_str("RS:");
 302   1      bill=u*5;
C51 COMPILER V9.60.0.0   SEM                                                               12/23/2021 01:47:58 PAGE 6   

 303   1      convert(bill);
 304   1      delay(2000);
 305   1      cmd(0x01);
 306   1      tx(0x1A);
 307   1      delay(3000);
 308   1      bill1=bill;
 309   1      count1=count;
 310   1      u1=u;
 311   1      delay(1000);
 312   1      RI=0;
 313   1      cmd(0x80);
 314   1       disp_str("MONTH COMPLETED....");
 315   1       cmd(0xc0);
 316   1       disp_str("PLEASE PAY BILL ");
 317   1       delay(1000);
 318   1       cmd(0x01);
 319   1       cmd(0x80);
 320   1       disp_str("PULSE COUNT:");
 321   1       cmd(0x8C);
 322   1       lcd_val(count);
 323   1       cmd(0xC0);
 324   1       disp_str("NO.UNITS:");
 325   1       cmd(0xC9);
 326   1       lcd_val(u);
 327   1      }
 328          void sense() 
 329          {
 330   1      count++;
 331   1      cmd(0x8C);
 332   1      lcd_val(count);
 333   1      u=watt_factor*count/1;
 334   1       cmd(0xC9);
 335   1      lcd_val(u);
 336   1      delay(200);
 337   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1444    ----
   CONSTANT SIZE    =    325    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     18      42
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
